{"ast":null,"code":"var _jsxFileName = \"/home/oneeyedziggy/linuxCodeStuff/InterviewRegistrationApp/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { Input } from './components/Input';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst minPasswordLength = 8;\nconst getEmailError = email => {\n  // see https://emailregex.com/, emails are weird and we may prefer a more specific definition than the strictly spec-compliant one\n  const validEmailRegexp = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  return validEmailRegexp.test(email) ? '' : `Please enter a valid email address`;\n};\nconst getPasswordError = password => {\n  return password.length >= 8 ? '' : `Password must be at least ${minPasswordLength} characters`; //Note: highly recommend stricter complexity requirement\n};\n\nconst HeaderDiv = styled.div`\n  margin-top: -25px;\n  padding: 15px 20px 15px 20px;\n  background-color: black;\n  color: white;\n`;\n_c = HeaderDiv;\nconst CenteringDiv = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n_c2 = CenteringDiv;\nconst FlexColumnWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  min-width: 370px;\n  margin-top: 100px;\n`;\n_c3 = FlexColumnWrapper;\nfunction App() {\n  _s();\n  const [showDialog, setShowDialog] = useState(false);\n  const [areFieldsValid, setAreFieldsValid] = useState(false);\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [emailError, setEmailError] = useState('');\n  const [passwordError, setPasswordError] = useState('');\n\n  // while inefficient, this can be handy when fields have validation interdependencies, can be easily optimized if performance is crucial\n  useEffect(() => {\n    const localEmailError = getEmailError(email);\n    const localPasswordError = getPasswordError(password);\n    setEmailError(localEmailError);\n    setPasswordError(localPasswordError);\n    setAreFieldsValid(!localEmailError && !localPasswordError && !!firstName.length && !!lastName.length);\n  }, [email, password, firstName, lastName]);\n  const onSubmit = () => {\n    console.log('submitClicked');\n    setShowDialog(true);\n  };\n  const dialogClose = () => {\n    console.log('submitClicked');\n    setShowDialog(false);\n  };\n  console.log({\n    areFieldsValid\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(HeaderDiv, {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"AUTODESK\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CenteringDiv, {\n      children: [/*#__PURE__*/_jsxDEV(\"dialog\", {\n        id: \"successModal\",\n        open: showDialog,\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Thanks for registering \", firstName, \" \", lastName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          method: \"dialog\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: dialogClose,\n            children: \"OK\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FlexColumnWrapper, {\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          children: [/*#__PURE__*/_jsxDEV(Input, {\n            id: \"firstName\",\n            label: \"first name:\",\n            onChange: setFirstName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            id: \"lastName\",\n            label: \"last name:\",\n            onChange: setLastName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            id: \"email\",\n            label: \"email:\",\n            type: \"email\",\n            error: emailError,\n            onChange: setEmail\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            id: \"password\",\n            label: \"password:\",\n            type: \"password\",\n            error: passwordError,\n            minLength: minPasswordLength,\n            onChange: setPassword\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: onSubmit,\n            type: \"button\",\n            disabled: !areFieldsValid,\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"rDY56z+I3J5B7m0UG0FY4Ipxnw8=\");\n_c4 = App;\nexport default App;\n\n/*\nFirst Challenge: User Registration\n\nBuild a user registration form using React and TypeScript. The form should have the following fields: first name, last name, email, and password. Implement the following features.\n\n    Input validation for email and password fields (e.g., valid email format, minimum password length).\n    Display error messages for invalid inputs.\n    Disable the submit button until all inputs are valid.\n    After successful registration, display a confirmation message with the user's full name.\n*/\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"HeaderDiv\");\n$RefreshReg$(_c2, \"CenteringDiv\");\n$RefreshReg$(_c3, \"FlexColumnWrapper\");\n$RefreshReg$(_c4, \"App\");","map":{"version":3,"names":["React","useState","useEffect","styled","Input","jsxDEV","_jsxDEV","Fragment","_Fragment","minPasswordLength","getEmailError","email","validEmailRegexp","test","getPasswordError","password","length","HeaderDiv","div","_c","CenteringDiv","_c2","FlexColumnWrapper","_c3","App","_s","showDialog","setShowDialog","areFieldsValid","setAreFieldsValid","firstName","setFirstName","lastName","setLastName","setEmail","setPassword","emailError","setEmailError","passwordError","setPasswordError","localEmailError","localPasswordError","onSubmit","console","log","dialogClose","children","fileName","_jsxFileName","lineNumber","columnNumber","id","open","method","onClick","label","onChange","type","error","minLength","disabled","_c4","$RefreshReg$"],"sources":["/home/oneeyedziggy/linuxCodeStuff/InterviewRegistrationApp/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\n\nimport { Input } from './components/Input';\n\nconst minPasswordLength = 8;\n\nconst getEmailError = (email: string): string => {\n  // see https://emailregex.com/, emails are weird and we may prefer a more specific definition than the strictly spec-compliant one\n  const validEmailRegexp =\n    /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  return validEmailRegexp.test(email)\n    ? ''\n    : `Please enter a valid email address`;\n};\n\nconst getPasswordError = (password: string): string => {\n  return password.length >= 8\n    ? ''\n    : `Password must be at least ${minPasswordLength} characters`; //Note: highly recommend stricter complexity requirement\n};\n\nconst HeaderDiv = styled.div`\n  margin-top: -25px;\n  padding: 15px 20px 15px 20px;\n  background-color: black;\n  color: white;\n`;\nconst CenteringDiv = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n\nconst FlexColumnWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  min-width: 370px;\n  margin-top: 100px;\n`;\n\nfunction App() {\n  const [showDialog, setShowDialog] = useState(false);\n  const [areFieldsValid, setAreFieldsValid] = useState(false);\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [emailError, setEmailError] = useState('');\n  const [passwordError, setPasswordError] = useState('');\n\n  // while inefficient, this can be handy when fields have validation interdependencies, can be easily optimized if performance is crucial\n  useEffect(() => {\n    const localEmailError = getEmailError(email);\n    const localPasswordError = getPasswordError(password);\n    setEmailError(localEmailError);\n    setPasswordError(localPasswordError);\n    setAreFieldsValid(\n      !localEmailError &&\n        !localPasswordError &&\n        !!firstName.length &&\n        !!lastName.length\n    );\n  }, [email, password, firstName, lastName]);\n\n  const onSubmit = () => {\n    console.log('submitClicked');\n    setShowDialog(true);\n  };\n  const dialogClose = () => {\n    console.log('submitClicked');\n    setShowDialog(false);\n  };\n\n  console.log({ areFieldsValid });\n  return (\n    <>\n      <HeaderDiv>\n        <h1>AUTODESK</h1>\n      </HeaderDiv>\n      <CenteringDiv>\n        <dialog id=\"successModal\" open={showDialog}>\n          <p>\n            Thanks for registering {firstName} {lastName}\n          </p>\n          <form method=\"dialog\">\n            <button onClick={dialogClose}>OK</button>\n          </form>\n        </dialog>\n        <FlexColumnWrapper>\n          <form>\n            <Input id=\"firstName\" label=\"first name:\" onChange={setFirstName} />\n            <Input id=\"lastName\" label=\"last name:\" onChange={setLastName} />\n            <Input\n              id=\"email\"\n              label=\"email:\"\n              type=\"email\"\n              error={emailError}\n              onChange={setEmail}\n            />\n            <Input\n              id=\"password\"\n              label=\"password:\"\n              type=\"password\"\n              error={passwordError}\n              minLength={minPasswordLength}\n              onChange={setPassword}\n            />\n            <button onClick={onSubmit} type=\"button\" disabled={!areFieldsValid}>\n              Submit\n            </button>\n          </form>\n        </FlexColumnWrapper>\n      </CenteringDiv>\n    </>\n  );\n}\n\nexport default App;\n\n/*\nFirst Challenge: User Registration\n\nBuild a user registration form using React and TypeScript. The form should have the following fields: first name, last name, email, and password. Implement the following features.\n\n    Input validation for email and password fields (e.g., valid email format, minimum password length).\n    Display error messages for invalid inputs.\n    Disable the submit button until all inputs are valid.\n    After successful registration, display a confirmation message with the user's full name.\n*/\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}