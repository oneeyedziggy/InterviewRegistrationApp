{"ast":null,"code":"var _jsxFileName = \"/home/oneeyedziggy/linuxCodeStuff/InterviewRegistrationApp/src/components/Input.tsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Input = ({\n  id,\n  name,\n  label,\n  type = 'text',\n  minLength = -1,\n  error = '',\n  onChange\n}) => {\n  const changeHandeler = thing => {\n    var _thing$target$value, _thing$target;\n    onChange((_thing$target$value = thing === null || thing === void 0 ? void 0 : (_thing$target = thing.target) === null || _thing$target === void 0 ? void 0 : _thing$target.value) !== null && _thing$target$value !== void 0 ? _thing$target$value : '');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: id,\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"span\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 17\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n      id: id,\n      name: name !== null && name !== void 0 ? name : id,\n      type: type,\n      minLength: minLength,\n      onChange: changeHandeler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_c = Input;\nexport default Input;\nvar _c;\n$RefreshReg$(_c, \"Input\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Input","id","name","label","type","minLength","error","onChange","changeHandeler","thing","_thing$target$value","_thing$target","target","value","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/oneeyedziggy/linuxCodeStuff/InterviewRegistrationApp/src/components/Input.tsx"],"sourcesContent":["import React, { type HTMLInputTypeAttribute } from 'react';\r\n\r\ntype InputProps = {\r\n  id: string;\r\n  name?: string;\r\n  label: string;\r\n  type?: HTMLInputTypeAttribute;\r\n  minLength?: number;\r\n  error?: string;\r\n  onChange: (val: any) => void;\r\n};\r\n\r\nexport const Input = ({\r\n  id,\r\n  name,\r\n  label,\r\n  type = 'text',\r\n  minLength = -1,\r\n  error = '',\r\n  onChange,\r\n}: InputProps) => {\r\n  const changeHandeler = (thing: React.ChangeEvent<HTMLInputElement>) => {\r\n    onChange(thing?.target?.value ?? '');\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <label htmlFor={id}>{label}</label>\r\n      {error && <span>{error}</span>} {/* TODO: color this red */}\r\n      <input\r\n        id={id}\r\n        name={name ?? id}\r\n        type={type}\r\n        minLength={minLength}\r\n        onChange={changeHandeler}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAuC,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAY3D,OAAO,MAAMC,KAAK,GAAGA,CAAC;EACpBC,EAAE;EACFC,IAAI;EACJC,KAAK;EACLC,IAAI,GAAG,MAAM;EACbC,SAAS,GAAG,CAAC,CAAC;EACdC,KAAK,GAAG,EAAE;EACVC;AACU,CAAC,KAAK;EAChB,MAAMC,cAAc,GAAIC,KAA0C,IAAK;IAAA,IAAAC,mBAAA,EAAAC,aAAA;IACrEJ,QAAQ,EAAAG,mBAAA,GAACD,KAAK,aAALA,KAAK,wBAAAE,aAAA,GAALF,KAAK,CAAEG,MAAM,cAAAD,aAAA,uBAAbA,aAAA,CAAeE,KAAK,cAAAH,mBAAA,cAAAA,mBAAA,GAAI,EAAE,CAAC;EACtC,CAAC;EAED,oBACEX,OAAA;IAAAe,QAAA,gBACEf,OAAA;MAAOgB,OAAO,EAAEd,EAAG;MAAAa,QAAA,EAAEX;IAAK;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAClCb,KAAK,iBAAIP,OAAA;MAAAe,QAAA,EAAOR;IAAK;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,EAAC,GAAC,eAChCpB,OAAA;MACEE,EAAE,EAAEA,EAAG;MACPC,IAAI,EAAEA,IAAI,aAAJA,IAAI,cAAJA,IAAI,GAAID,EAAG;MACjBG,IAAI,EAAEA,IAAK;MACXC,SAAS,EAAEA,SAAU;MACrBE,QAAQ,EAAEC;IAAe;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACC,EAAA,GA1BWpB,KAAK;AA4BlB,eAAeA,KAAK;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}