{"ast":null,"code":"var _jsxFileName = \"/home/oneeyedziggy/linuxCodeStuff/InterviewRegistrationApp/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Input } from './components/Input';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst minPasswordLength = 8;\nconst usernameOnChange = thing => {\n  var _thing$target;\n  console.log({\n    thingVal: thing === null || thing === void 0 ? void 0 : (_thing$target = thing.target) === null || _thing$target === void 0 ? void 0 : _thing$target.value\n  });\n};\nconst onSubmit = thing => {\n  console.log('submitClicked');\n};\nconst validateEmail = password => {\n  return password.length >= 8 || `Password must be at least ${minPasswordLength} characters`; //Note: highly recomment stricter complexity requirement\n};\n\nconst validatePassword = password => {\n  return password.length >= 8 ? '' : `Password must be at least ${minPasswordLength} characters`; //Note: highly recomment stricter complexity requirement\n};\n\nfunction App() {\n  _s();\n  const [areFieldsValid, setAreFieldsValid] = useState(false);\n  const [email, setEmail] = useState(false);\n  const [password, setPassword] = useState(false);\n  const [firstName, setFirstName] = useState(false);\n  const [lastName, setLastName] = useState(false);\n  useEffect(() => {\n    setAreFieldsValid(email && password && firstName.length && lastName.length);\n  }, [username, password, firstName, lastName]);\n  console.log({\n    areFieldsValid\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        id: \"firstName\",\n        label: \"first name:\",\n        onChange: usernameOnChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        id: \"lastName\",\n        label: \"last name:\",\n        onChange: usernameOnChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        id: \"email\",\n        label: \"email:\",\n        type: \"email\",\n        onChange: usernameOnChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        id: \"password\",\n        label: \"password:\",\n        type: \"password\",\n        minlength: minPasswordLength,\n        onChange: usernameOnChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onSubmit,\n        type: \"button\",\n        disabled: !areFieldsValid,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"7PTRU6Imtiv+l/INgU10v0pMALU=\");\n_c = App;\nexport default App;\n\n/*\nFirst Challenge: User Registration\n\nBuild a user registration form using React and TypeScript. The form should have the following fields: first name, last name, email, and password. Implement the following features.\n\n    Input validation for email and password fields (e.g., valid email format, minimum password length).\n    Display error messages for invalid inputs.\n    Disable the submit button until all inputs are valid.\n    After successful registration, display a confirmation message with the user's full name.\n*/\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Input","jsxDEV","_jsxDEV","minPasswordLength","usernameOnChange","thing","_thing$target","console","log","thingVal","target","value","onSubmit","validateEmail","password","length","validatePassword","App","_s","areFieldsValid","setAreFieldsValid","email","setEmail","setPassword","firstName","setFirstName","lastName","setLastName","username","className","children","id","label","onChange","fileName","_jsxFileName","lineNumber","columnNumber","type","minlength","onClick","disabled","_c","$RefreshReg$"],"sources":["/home/oneeyedziggy/linuxCodeStuff/InterviewRegistrationApp/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nimport { Input } from './components/Input';\n\nconst minPasswordLength = 8;\n\nconst usernameOnChange = (thing: React.ChangeEvent<HTMLInputElement>) => {\n  console.log({\n    thingVal: thing?.target?.value,\n  });\n};\n\nconst onSubmit = (thing: React.MouseEvent<HTMLButtonElement>) => {\n  console.log('submitClicked');\n};\n\nconst validateEmail = (password: string): string => {\n  return (\n    password.length >= 8 ||\n    `Password must be at least ${minPasswordLength} characters`\n  ); //Note: highly recomment stricter complexity requirement\n};\nconst validatePassword = (password: string): string => {\n  return password.length >= 8\n    ? ''\n    : `Password must be at least ${minPasswordLength} characters`; //Note: highly recomment stricter complexity requirement\n};\n\nfunction App() {\n  const [areFieldsValid, setAreFieldsValid] = useState(false);\n  const [email, setEmail] = useState(false);\n  const [password, setPassword] = useState(false);\n  const [firstName, setFirstName] = useState(false);\n  const [lastName, setLastName] = useState(false);\n\n  useEffect(() => {\n    setAreFieldsValid(email && password && firstName.length && lastName.length);\n  }, [username, password, firstName, lastName]);\n\n  console.log({ areFieldsValid });\n  return (\n    <div className=\"App\">\n      <form>\n        <Input id=\"firstName\" label=\"first name:\" onChange={usernameOnChange} />\n        <Input id=\"lastName\" label=\"last name:\" onChange={usernameOnChange} />\n        <Input\n          id=\"email\"\n          label=\"email:\"\n          type=\"email\"\n          onChange={usernameOnChange}\n        />\n        <Input\n          id=\"password\"\n          label=\"password:\"\n          type=\"password\"\n          minlength={minPasswordLength}\n          onChange={usernameOnChange}\n        />\n        <button onClick={onSubmit} type=\"button\" disabled={!areFieldsValid}>\n          Submit\n        </button>\n      </form>\n    </div>\n  );\n}\n\nexport default App;\n\n/*\nFirst Challenge: User Registration\n\nBuild a user registration form using React and TypeScript. The form should have the following fields: first name, last name, email, and password. Implement the following features.\n\n    Input validation for email and password fields (e.g., valid email format, minimum password length).\n    Display error messages for invalid inputs.\n    Disable the submit button until all inputs are valid.\n    After successful registration, display a confirmation message with the user's full name.\n*/\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}